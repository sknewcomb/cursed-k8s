apiVersion: v1
kind: ServiceAccount
metadata:
  name: status-page
  namespace: monitoring
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: status-page
rules:
- apiGroups: [""]
  resources:
  - pods
  - services
  - endpoints
  verbs: ["get", "list", "watch"]
- apiGroups: ["apps"]
  resources:
  - deployments
  verbs: ["get", "list", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: status-page
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: status-page
subjects:
- kind: ServiceAccount
  name: status-page
  namespace: monitoring
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: status-page
  namespace: monitoring
  labels:
    app: status-page
spec:
  replicas: 1
  selector:
    matchLabels:
      app: status-page
  template:
    metadata:
      labels:
        app: status-page
    spec:
      serviceAccountName: status-page
      containers:
      - name: status-page
        image: python:3.11-slim
        command: ["/bin/sh"]
        args:
        - -c
        - |
          pip install --no-cache-dir Flask==3.0.0 kubernetes==28.1.0 && \
          python3 /app/app.py
        ports:
        - containerPort: 8080
          name: http
        volumeMounts:
        - name: app-code
          mountPath: /app
          readOnly: true
        - name: templates
          mountPath: /app/templates
          readOnly: true
        resources:
          requests:
            cpu: 50m
            memory: 128Mi
          limits:
            cpu: 200m
            memory: 256Mi
        livenessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8080
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: app-code
        configMap:
          name: status-page-app
      - name: templates
        configMap:
          name: status-page-template
---
apiVersion: v1
kind: Service
metadata:
  name: status-page
  namespace: monitoring
  labels:
    app: status-page
spec:
  type: NodePort
  ports:
  - name: http
    port: 8080
    targetPort: 8080
    nodePort: 30088
    protocol: TCP
  selector:
    app: status-page
